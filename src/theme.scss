@use '~@angular/material' as mat;
// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!

$app-typography: mat.define-typography-config(
  $display-4:  mat.define-typography-level(4em, 1, 500),
  $display-3:  mat.define-typography-level(3em, 1, 500),
  $display-2:  mat.define-typography-level(2em, 1, 500),
  $headline:  mat.define-typography-level(28px, 1, 500),
  $title:  mat.define-typography-level(24px, 1, 500),
  $body-1: mat.define-typography-level(18px, 1, 400),
  $caption: mat.define-typography-level(14px, 1, 400)
);

@include mat.core($app-typography);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue.
$neptune-primary: mat.define-palette(mat.$indigo-palette, 600);
$neptune-accent:  mat.define-palette(mat.$pink-palette);
$neptune-warn:    mat.define-palette(mat.$deep-orange-palette);
// Create the theme object (a Sass map containing all of the palettes).
$neptune-theme: mat.define-dark-theme($neptune-primary, $neptune-accent, $neptune-warn);
// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($neptune-theme);